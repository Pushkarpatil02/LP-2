import random

class TicTacToe:

def __init__(self):

self.board = []

def create_board(self):

for i in range(3):

row = []

for j in range(3):

row.append(&#39;-&#39;)

self.board.append(row)

def get_random_first_player(self):

return random.randint(0, 1)

def fix_spot(self, row, col, player):

self.board[row][col] = player

def is_player_win(self, player):

win = None

n = len(self.board)

# checking rows

for i in range(n):

win = True

for j in range(n):

if self.board[i][j] != player:

win = False

break

if win:

return win

# checking columns

for i in range(n):

win = True
for j in range(n):

if self.board[j][i] != player:

win = False

break

if win:

return win

# checking diagonals

win = True

for i in range(n):

if self.board[i][i] != player:

win = False

break

if win:

return win

win = True

for i in range(n):

if self.board[i][n - 1 - i] != player:

win = False

break

if win:

return win

return False

for row in self.board:

for item in row:

if item == &#39;-&#39;:

return False

return True

def is_board_filled(self):

for row in self.board:

for item in row:
if item == &#39;-&#39;:

return False

return True

def swap_player_turn(self, player):

return &#39;X&#39; if player == &#39;O&#39; else &#39;O&#39;

def show_board(self):

for row in self.board:

for item in row:

print(item, end=&quot; &quot;)

print()

def start(self):

self.create_board()

player = &#39;X&#39; if self.get_random_first_player() == 1 else &#39;O&#39;

while True:

print(f&quot;Player {player} turn&quot;)

self.show_board()

# taking user input

row, col = list(

map(int, input(&quot;Enter row and column numbers to fix spot:

&quot;).split()))

print()

# fixing the spot

self.fix_spot(row - 1, col - 1, player)

# checking whether current player is won or not

if self.is_player_win(player):

print(f&quot;Player {player} wins the game!&quot;)

break

# checking whether the game is draw or not

if self.is_board_filled():

print(&quot;Match Draw!&quot;)

break
